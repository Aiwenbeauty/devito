# Runner information:
# Standard NC24_Promo (24 vcpus, 224 GiB memory)
# NVIDIA Tesla K80, Intel Xeon E5-2690 v3 (Haswell)

name: CI-gpu

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.tags }}

    strategy:
      # Prevent all build to stop if a single one fails
      fail-fast: false

      matrix:
        name: [
          pytest-gpu-omp,
          pytest-gpu-acc
        ]
        include:
        - name: pytest-gpu-omp
          test_file: "tests/test_gpu_openmp.py"
          arch: "clang"
          platform: "nvidiaX"
          language: "openmp"
          tags: ["self-hosted", "gpu", "openmp"]

        - name: pytest-gpu-acc
          test_file: "tests/test_gpu_openacc.py"
          arch: "pgcc"
          platform: "nvidiaX"
          language: "openacc"
          tags: ["self-hosted", "gpu", "openacc"]

    steps:
    - name: Checkout devito
      uses: actions/checkout@v1

    - name: set environment variables
      uses: allenevans/set-env@v1.0.0
      with:
        DEVITO_ARCH: ${{ matrix.arch }}
        DEVITO_PLATFORM: ${{ matrix.platform }}
        DEVITO_LANGUAGE: ${{ matrix.language }}
        OMPI_CC: ${{ matrix.arch }}

    - name: Install dependencies
      run: |
        pip3 install --upgrade pip
        pip3 install -e .[extras]

    - name: Test with pytest
      run: |
        pgaccelinfo
        pytest --cov --cov-config=.coveragerc --cov-report=xml ${{ matrix.test_file }}
        pytest --cov --cov-config=.coveragerc --cov-report=xml examples/seismic/elastic/elastic_example.py
        if [ "${{ matrix.name }}" == 'pytest-gpu-omp' ]; then
            pytest --cov --cov-config=.coveragerc --cov-report=xml examples/seismic/viscoelastic/viscoelastic_example.py
        fi

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1.0.6
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        name: ${{ matrix.name }}
